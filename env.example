# ==============================================
# CONFIGURACIÓN DE VARIABLES DE ENTORNO
# Sistema POS O'Data v2.0.0
# ==============================================
# IMPORTANTE: Copie este archivo como .env y modifique los valores

# ===== APLICACIÓN PRINCIPAL =====
FLASK_ENV=production
SECRET_KEY=your-super-secret-key-here-change-this-in-production
JWT_SECRET_KEY=your-jwt-secret-key-here-change-this-in-production
HOST=0.0.0.0
PORT=8000
LOG_LEVEL=WARNING

# ===== BASE DE DATOS =====
# Para SQLite (desarrollo)
DATABASE_URL=sqlite:///instance/pos_odata.db

# Para PostgreSQL (producción)
# DATABASE_URL=postgresql://pos_user:secure_password@postgres:5432/pos_odata
POSTGRES_DB=pos_odata
POSTGRES_USER=pos_user
POSTGRES_PASSWORD=change-this-secure-postgres-password

# ===== REDIS CACHE =====
REDIS_PASSWORD=change-this-secure-redis-password
REDIS_URL=redis://:${REDIS_PASSWORD}@redis:6379/0
RATELIMIT_STORAGE_URL=redis://:${REDIS_PASSWORD}@redis:6379/1

# ===== MONITOREO =====
# Grafana
GRAFANA_ADMIN_USER=admin
GRAFANA_ADMIN_PASSWORD=change-this-secure-grafana-password

# Prometheus
PROMETHEUS_RETENTION_TIME=30d

# ===== ALERTAS =====
ALERT_EMAIL=admin@your-domain.com
SMTP_SERVER=smtp.your-domain.com
SMTP_PORT=587
SMTP_USER=alerts@your-domain.com
SMTP_PASSWORD=change-this-smtp-password

# ===== SEGURIDAD =====
# Configuración SSL/TLS
SSL_CERT_PATH=/etc/nginx/ssl/cert.pem
SSL_KEY_PATH=/etc/nginx/ssl/key.pem

# ===== BACKUP =====
BACKUP_RETENTION_DAYS=30
BACKUP_MAX_FILES=50
BACKUP_DIR=/backups

# ===== EMPRESA =====
COMPANY_NAME="Su Empresa"
COMPANY_EMAIL=info@your-domain.com
COMPANY_PHONE="+57 300 123 4567"

# ===== INTEGRACIONES =====
# Email Service
EMAIL_HOST=smtp.gmail.com
EMAIL_PORT=587
EMAIL_USER=your-email@gmail.com
EMAIL_PASSWORD=your-app-password
EMAIL_USE_TLS=true

# SMS/WhatsApp (opcional)
WHATSAPP_API_KEY=your-whatsapp-api-key
SMS_API_KEY=your-sms-api-key

# ===== DESARROLLO (solo para desarrollo) =====
DEBUG=false
TESTING=false
DEVELOPMENT_MODE=false

# ===== NOTAS DE SEGURIDAD =====
# 1. NUNCA committe este archivo con valores reales
# 2. Use contraseñas seguras de al menos 32 caracteres
# 3. Rote las contraseñas regularmente
# 4. Use diferentes contraseñas para cada servicio
# 5. En producción, use un gestor de secretos como Docker Secrets o HashiCorp Vault

# ===== GENERADORES DE CONTRASEÑAS SEGURAS =====
# Para generar contraseñas seguras, use:
# openssl rand -base64 32
# python -c "import secrets; print(secrets.token_urlsafe(32))"
