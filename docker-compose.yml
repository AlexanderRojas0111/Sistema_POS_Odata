# Sistema POS Sabrositas v2.0.0 - Docker Compose
# ==============================================
# Configuración optimizada para Las Arepas Cuadradas

version: '3.8'

services:
  # ===== APLICACIÓN PRINCIPAL =====
  sabrositas-app:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: sabrositas-pos-app
    ports:
      - "8000:8000"
    environment:
      - FLASK_ENV=production
      - DATABASE_URL=sqlite:///instance/pos_odata.db
      - SECRET_KEY=${SECRET_KEY:-sabrositas-secret-key-2024}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-sabrositas-jwt-secret-2024}
      - REDIS_URL=redis://:${REDIS_PASSWORD:-sabrositas_redis_123}@redis:6379/0
      - RATELIMIT_STORAGE_URL=redis://:${REDIS_PASSWORD:-sabrositas_redis_123}@redis:6379/1
      - HOST=0.0.0.0
      - PORT=8000
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
      - ./instance:/app/instance
      - ./backups:/app/backups
    restart: unless-stopped
    networks:
      - sabrositas-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on:
      - redis

  # ===== REDIS PARA CACHE Y RATE LIMITING =====
  redis:
    image: redis:7.2-alpine
    container_name: sabrositas-redis
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru --requirepass ${REDIS_PASSWORD:-sabrositas_redis_123}
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - sabrositas-network
    healthcheck:
      test: ["CMD", "redis-cli", "--no-auth-warning", "-a", "${REDIS_PASSWORD:-sabrositas_redis_123}", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 20s

# ===== REDES =====
networks:
  sabrositas-network:
    driver: bridge
    name: sabrositas-network

# ===== VOLÚMENES =====
volumes:
  redis_data:
    name: sabrositas-redis-data